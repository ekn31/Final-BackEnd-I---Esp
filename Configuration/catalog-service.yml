server:
  port: ${port:0}

spring:
  application:
    name: catalog-service
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password: sa
  jpa:
    open-in-view: false
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
  h2:
    console:
      enabled: true
      path: /h2-console

  rabbitmq:
    username: guest
    password: guest
    host: localhost
    port: 15672


management.endpoints.web.exposure.include: '*'
management.endpoint.health.show-details: always

management.health.diskspace.enabled: false
management.health.circuitbreakers.enabled: true
management.health.ratelimiters.enabled: false
management.metrics.tags.application: ${spring.application.name}
management.metrics.distribution.percentiles-histogram.http.server.requests: true
management.metrics.distribution.percentiles-histogram.resilience4j.circuitbreaker.calls: true

resilience4j.circuitbreaker:
  instances:
    MovieService:
      registerHealthIndicator: true
      slindingWindowsSize: 10
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowType: TIME_BASED
      minimumNumberOfCall: 20
      waitDurationInOpenState: 50s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10

queue:
  movie:
    name: MovieQueue

  rabbitmq:
    username: guest
    password: guest
    host: localhost
    port: 5672

message: hello from catalog-service